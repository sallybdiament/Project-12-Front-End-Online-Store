{"version":3,"sources":["components/BotaoCarrinho.jsx","services/api.js","services/localStorage.js","components/Card.jsx","components/Search.jsx","components/ItemCategory.jsx","components/Categories.jsx","pages/Home.jsx","pages/CarrinhoDeCompras.jsx","pages/DetalhesProduto.jsx","pages/Checkout.jsx","App.js","serviceWorker.js","index.js"],"names":["BotaoCarrinho","to","data-testid","React","Component","getCategories","a","fetch","request","json","requestJson","getProductsFromCategoryAndQuery","categoryId","idQuery","requestCategory","requestCatJson","getProductsFromCategory","getProductsFromProductId","productId","createUser","user","localStorage","setItem","JSON","stringify","saveUser","titleProduct","priceProduct","quantityProduct","Card","handleClick","props","produtoId","preco","nome","console","log","this","imagem","freteGratis","src","alt","type","onClick","Search","state","search","produtos","onHandleChange","event","target","setState","name","value","objeto","results","htmlFor","id","onChange","map","produto","key","title","thumbnail","price","shipping","free_shipping","ItemCategory","cartProduto","categoryName","Categories","returnCategories","categories","objCategory","category","Home","CarrinhoDeCompras","idProduct","showProducts","objProduct","parse","getItem","handleClickAument","handleClickDiminui","min","DetalhesProduto","titleProducts","priceProducts","imgProducts","soldQuantityProducts","productIds","componentDidMount","match","params","product","sold_quantity","Checkout","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3fd467f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass BotaoCarrinho extends React.Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/CarrinhoDeCompras\" data-testid=\"shopping-cart-button\">Carrinho</Link>\n      </div>\n    );\n  }\n}\n\nexport default BotaoCarrinho;\n","export async function getCategories() {\n  const request = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const requestJson = await request.json();\n  return requestJson;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, idQuery) {\n  const requestCategory = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${idQuery}`);\n  const requestCatJson = await requestCategory.json();\n  return requestCatJson;\n}\n\nexport async function getProductsFromCategory(categoryId) {\n  const requestCategory = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`);\n  const requestCatJson = await requestCategory.json();\n  return requestCatJson;\n}\n\nexport async function getProductsFromProductId(productId) {\n  const requestCategory = await fetch(`https://api.mercadolibre.com/items/${productId}`);\n  const requestJson = await requestCategory.json();\n  return requestJson;\n}\n","const USER_KEY = 'user';\n// const TIMEOUT = 1500;\n// const SUCCESS_STATUS = 'OK';\n\n// const readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\n// const simulateRequest = (response) => (callback) => {\n//   setTimeout(() => {\n//     callback(response);\n//   }, TIMEOUT);\n// };\n\n// export const getUser = () => new Promise((resolve) => {\n//   let user = readUser();\n//   if (user === null) {\n//     user = {};\n//   }\n//   simulateRequest(user)(resolve);\n// });\n\nconst createUser = (user) => {\n  const emptyCart = {\n    titleProduct: '',\n    priceProduct: '',\n    quantityProduct: '',\n    productId: '',\n  };\n  saveUser({ ...emptyCart, ...user });\n//   simulateRequest(SUCCESS_STATUS)(resolve);\n};\n\nexport default createUser;\n\n// export const updateUser = (updatedUser) => new Promise((resolve) => {\n//   saveUser({ ...updatedUser });\n//   simulateRequest(SUCCESS_STATUS)(resolve);\n// });\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport createUser from '../services/localStorage';\n\nclass Card extends React.Component {\n  handleClick = () => {\n    const { produtoId, preco } = this.props;\n    const { nome } = this.props;\n    createUser({\n      titleProduct: nome,\n      priceProduct: preco,\n      quantityProduct: 1,\n      productId: produtoId });\n    console.log('clicou');\n  }\n\n  render() {\n    const { nome, imagem, preco, produtoId, freteGratis } = this.props;\n    console.log(freteGratis);\n    return (\n      <div data-testid=\"product\">\n        <Link\n          to={ `/DetalhesProduto/${produtoId}` }\n          data-testid=\"product-detail-link\"\n        >\n          <p>{nome}</p>\n          <img src={ imagem } alt={ nome } />\n          { freteGratis && <p data-testid=\"free-shipping\">Frete Grátis</p>}\n          <p>{ preco }</p>\n        </Link>\n        {/* <Link to={ `/CarrinhoDeCompras/${produtoId}` }> */}\n        <button\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          // data-testid=\"shopping-cart-button\"\n          onClick={ this.handleClick }\n        >\n          Adicionar ao carrinho\n        </button>\n        {/* </Link> */}\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  nome: PropTypes.string,\n  imagem: PropTypes.string,\n  preco: PropTypes.number,\n  produtoId: PropTypes.string,\n}.isRequired;\n\nexport default Card;\n","import React from 'react';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Card from './Card';\n\nclass Search extends React.Component {\n  state = {\n    search: '',\n    produtos: [],\n  }\n\n  onHandleChange = (event) => {\n    const { target } = event;\n    this.setState({ [target.name]: target.value });\n  }\n\n  handleClick = async () => {\n    const { search } = this.state;\n    const objeto = await getProductsFromCategoryAndQuery(null, search);\n    const produtos = objeto.results;\n    this.setState({ produtos });\n  }\n\n  render() {\n    const { search, produtos } = this.state;\n    // console.log(produtos);\n    return (\n      <div>\n        <label htmlFor=\"search\">\n          Buscar:\n          <input\n            id=\"search\"\n            name=\"search\"\n            type=\"text\"\n            value={ search }\n            onChange={ this.onHandleChange }\n            data-testid=\"query-input\"\n          />\n        </label>\n        <button\n          type=\"submit\"\n          onClick={ this.handleClick }\n          data-testid=\"query-button\"\n        >\n          Buscar\n        </button>\n        {produtos.map((produto) => (\n          <div key={ produto.id }>\n            <Card\n              nome={ produto.title }\n              imagem={ produto.thumbnail }\n              preco={ produto.price }\n              produtoId={ produto.id }\n              freteGratis={ produto.shipping.free_shipping }\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getProductsFromCategory } from '../services/api';\nimport Card from './Card';\n\nclass ItemCategory extends React.Component {\n  state = {\n    cartProduto: [],\n  }\n\n  handleClick = async (event) => {\n    const categoryName = event.target.id;\n    const objeto = await getProductsFromCategory(categoryName);\n    const cartProduto = objeto.results;\n    console.log(objeto);\n    this.setState({ cartProduto });\n  }\n\n  render() {\n    const { name, categoryId } = this.props;\n    const { cartProduto } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"category\">\n          <input\n            data-testid=\"category\"\n            type=\"button\"\n            value={ name }\n            id={ categoryId }\n            onClick={ (event) => {\n              this.handleClick(event);\n            } }\n          />\n        </label>\n        {cartProduto.map((produto) => (\n          <div key={ produto.id }>\n            <Card\n              nome={ produto.title }\n              imagem={ produto.thumbnail }\n              preco={ produto.price }\n              produtoId={ produto.id }\n              freteGratis={ produto.shipping.free_shipping }\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nItemCategory.propTypes = {\n  name: PropTypes.string,\n}.isRequired;\n\nexport default ItemCategory;\n","import React from 'react';\nimport { getCategories } from '../services/api';\nimport ItemCategory from './ItemCategory';\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      objCategory: [],\n    };\n  }\n\n  componentDidMount() {\n    this.returnCategories();\n  }\n\n    returnCategories = async () => {\n      const categories = await getCategories();\n      this.setState({\n        objCategory: categories,\n      });\n    }\n\n    render() {\n      const { objCategory } = this.state;\n      return (\n        <div>\n          <ul>\n            { objCategory.map((category) => (\n              <ItemCategory\n                key={ category.key }\n                name={ category.name }\n                categoryId={ category.id }\n              />\n            ))}\n          </ul>\n        </div>\n      );\n    }\n}\n\nexport default Categories;\n","import React from 'react';\nimport BotaoCarrinho from '../components/BotaoCarrinho';\nimport Search from '../components/Search';\nimport Categories from '../components/Categories';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <p\n          data-testid=\"home-initial-message\"\n        >\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n        <BotaoCarrinho />\n        <Search />\n        <p>Categorias:</p>\n        <Categories />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import { getProductsFromProductId } from '../services/api';\n\nclass CarrinhoDeCompras extends React.Component {\n  state = {\n    titleProduct: '',\n    priceProduct: '',\n    // imgProduct: '',\n    quantityProduct: 0,\n    idProduct: '',\n  }\n\n  componentDidMount() {\n    this.showProducts();\n  }\n\n  showProducts = () => {\n    const objProduct = JSON.parse(localStorage.getItem('user'));\n    // console.log(objProduct.length);\n    if (objProduct) {\n      this.setState({\n        titleProduct: objProduct.titleProduct,\n        priceProduct: objProduct.priceProduct,\n        quantityProduct: objProduct.quantityProduct,\n        idProduct: objProduct.productId,\n      });\n    }\n  }\n\n  handleClickAument = () => {\n    this.setState((state) => ({ quantityProduct: state.quantityProduct + 1 }));\n  }\n\n  handleClickDiminui = () => {\n    const { quantityProduct } = this.state;\n    const min = 1;\n    if (quantityProduct > min) {\n      this.setState((state) => ({ quantityProduct: state.quantityProduct - 1 }));\n    }\n  }\n\n  render() {\n    const { titleProduct, priceProduct, quantityProduct, idProduct } = this.state;\n    console.log(localStorage.getItem('user'));\n    return (\n      <div>\n        <p data-testid=\"shopping-cart-empty-message\">\n          Seu carrinho está vazio\n        </p>\n        {/* {quantityProduct.length > 0\n        && (\n          <div key={ idProduct }>\n            <p data-testid=\"shopping-cart-product-name\">{titleProduct}</p>\n            <p>{priceProduct}</p>\n            <p data-testid=\"shopping-cart-product-quantity\">{quantityProduct}</p>\n          </div>)} */}\n        <div key={ idProduct }>\n          <p data-testid=\"shopping-cart-product-name\">{titleProduct}</p>\n          <p>{priceProduct}</p>\n          <p data-testid=\"shopping-cart-product-quantity\">{quantityProduct}</p>\n        </div>\n        <div>\n          <label htmlFor=\"product-increase-quantity\">\n            <input\n              id=\"search\"\n              name=\"search\"\n              type=\"number\"\n              value={ quantityProduct }\n              min=\"1\"\n              data-testid=\"product-increase-quantity\"\n            />\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"product-increase-quantity\"\n            onClick={ this.handleClickAument }\n          >\n            +\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"product-increase-quantity\"\n            onClick={ this.handleClickDiminui }\n          >\n            -\n          </button>\n        </div>\n        <Link to=\"/Checkout\" data-testid=\"checkout-products\">Checkout</Link>\n      </div>\n    );\n  }\n}\n\nexport default CarrinhoDeCompras;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getProductsFromProductId } from '../services/api';\nimport createUser from '../services/localStorage';\nimport BotaoCarrinho from '../components/BotaoCarrinho';\n\nclass DetalhesProduto extends React.Component {\n  state = {\n    titleProducts: '',\n    priceProducts: '',\n    imgProducts: '',\n    soldQuantityProducts: '',\n    productIds: '',\n  }\n\n  componentDidMount = async () => {\n    const { match } = this.props;\n    const productId = match.params.id;\n    const product = await getProductsFromProductId(productId);\n    console.log(product);\n    this.setState({\n      titleProducts: product.title,\n      priceProducts: product.price,\n      imgProducts: product.thumbnail,\n      soldQuantityProducts: product.sold_quantity,\n      productIds: product.id,\n    });\n  }\n\n  render() {\n    const { titleProducts, priceProducts,\n      imgProducts, soldQuantityProducts, productIds } = this.state;\n    return (\n      <div>\n        <BotaoCarrinho />\n        <p data-testid=\"product-detail-name\">{titleProducts}</p>\n        <p>{priceProducts}</p>\n        <img src={ imgProducts } alt={ titleProducts } />\n        <p>\n          Quantidade vendida até o momento:\n          {soldQuantityProducts}\n        </p>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ createUser({\n            titleProduct: titleProducts,\n            priceProduct: priceProducts,\n            quantityProduct: 1,\n            productId: productIds,\n          }) }\n        >\n          Adicionar ao carrinho\n        </button>\n        <br />\n        <Link to=\"/\">Voltar</Link>\n      </div>\n    );\n  }\n}\n\nDetalhesProduto.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any),\n  priceProducts: PropTypes.string,\n  titleProducts: PropTypes.string,\n}.isRequired;\n\nexport default DetalhesProduto;\n","import React from 'react';\n\nclass Checkout extends React.Component {\n  render() {\n    return (\n      <div>\n        <label htmlFor=\"nome\">\n          Nome:\n          <input\n            id=\"nome\"\n            name=\"nome\"\n            type=\"text\"\n            // value={ name }\n            // onChange={ this.onHandleChange }\n            data-testid=\"checkout-fullname\"\n          />\n        </label>\n        <label htmlFor=\"email\">\n          E-mail:\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            // value={ name }\n            // onChange={ this.onHandleChange }\n            data-testid=\"checkout-email\"\n          />\n        </label>\n        <label htmlFor=\"cpf\">\n          CPF:\n          <input\n            id=\"cpf\"\n            name=\"cpf\"\n            type=\"text\"\n            // value={ name }\n            // onChange={ this.onHandleChange }\n            data-testid=\"checkout-cpf\"\n          />\n        </label>\n        <label htmlFor=\"phone\">\n          Telefone:\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"text\"\n            // value={ name }\n            // onChange={ this.onHandleChange }\n            data-testid=\"checkout-phone\"\n          />\n        </label>\n        <label htmlFor=\"cep\">\n          CEP:\n          <input\n            id=\"cep\"\n            name=\"cep\"\n            type=\"text\"\n            // value={ name }\n            // onChange={ this.onHandleChange }\n            data-testid=\"checkout-cep\"\n          />\n        </label>\n        <label htmlFor=\"endereco\">\n          Endereço:\n          <input\n            id=\"endereco\"\n            name=\"endereco\"\n            type=\"text\"\n            // value={ name }\n            // onChange={ this.onHandleChange }\n            data-testid=\"checkout-address\"\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\nimport CarrinhoDeCompras from './pages/CarrinhoDeCompras';\nimport DetalhesProduto from './pages/DetalhesProduto';\nimport Checkout from './pages/Checkout';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/CarrinhoDeCompras/\" component={ CarrinhoDeCompras } />\n          <Route path=\"/DetalhesProduto/:id\" component={ DetalhesProduto } />\n          <Route path=\"/Checkout/\" component={ Checkout } />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}